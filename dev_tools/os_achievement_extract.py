from dev_tools.utils import LuaLoader

SAFE = ['Perform', 'Obtain', 'Collect', 'Conduct', 'Use', 'Encounter']
DANGER = ['Gain', 'Defeat', 'Restore', 'Destroy', 'Repel', 'Activate', 'Retrieve']  
ARCHIVE = ['Recover']

class OSTarget:
    def __init__(self):
        self.target = {}
        counter = 0
        for index, desc in DATA.items():
            if not isinstance(index, int) or index // 100 == 154:  # skip 154, which is not really used.
                continue
            if index % 100 == 1:
                self.target[index // 100] = []
        
        for index, desc in self.extract_target_desc().items():
            self.target[index // 100].append(self.desc_to_achievement_type(desc))

    def extract_target_desc(self):
        out = {}
        for index, target in DATA.items():
            if not isinstance(index, int) or index // 100 == 154:  # skip 154, which is not really used.
                continue
            name = target['target_desc']
            out[index] = name
        
        return out
        
    def desc_to_achievement_type(self, str):
        word = str.split()[0]
        if word in SAFE:
            return True
        if word in DANGER:
            return False
        if word in ARCHIVE:
            return None

    def encode(self):
        lines = []
        lines.append('# This file was automatically generated by dev_tools/os_achievement_extract.py.')
        lines.append("# Don't modify it manually.")
        lines.append('')
        lines.append('LIST_OS_ACHIEVEMENT = {')
        for index, target in self.target.items():
            lines.append(f'    {index}: {str(target)},')
        lines.append('}')
        return lines

    def write(self, file):
        print(f'writing {file}')
        with open(file, 'w', encoding='utf-8') as f:
            for text in self.encode():
                f.write(text + '\n')

"""
This an auto-tool to extract map data for operation siren.

Git clone https://github.com/AzurLaneTools/AzurLaneLuaScripts, to get the decrypted scripts.
Arguments:
    FILE:  Path to repository, such as 'xxx/AzurLaneLuaScripts'
    SAVE:  File to save, 'module/os/map_data.py'
"""
FILE = ''
SAVE = 'module/os_collection/achievement_data.py'


LOADER = LuaLoader(FILE, server='EN')
DATA = LOADER.load('./sharecfg/world_target_data.lua')
OSTarget().write(SAVE)